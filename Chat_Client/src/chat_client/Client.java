/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chat_client;

/**
 *
 * @author Brama Hendra Mahendra
 */

import java.net.*; //untuk mendukung code socket jaringan
import java.io.*; //untuk menginput data output yang terdapat pada source code
import java.util.*; //untuk menambah fungsi memonitor scanner

public class Client extends javax.swing.JFrame {

    String username, address = "192.168.0.102"; //untuk mengisi alamat ip address pc sendiri
    ArrayList<String> users = new ArrayList();
    int port = 2222; //untuk mengisi port
    Boolean isConnected = false;
    
    Socket sock;
    BufferedReader reader;
    PrintWriter writer;
    
    public void ListenThread() {
        Thread IncomingReader = new Thread(new IncomingReader()); //berfungsi untuk merakan thread dari server
        IncomingReader.start();
    }
    
    public void userAdd(String data) {
        users.add(data); //untuk menambahkan data
    }
    
    public void userRemove(String data) {
        msg_area.append(data + "Is now offline. \n"); //untuk menghapus data
    }
    
    public void writeUsers() { //sebuah code untuk menamp[ilkan sebuah tulisan
        String[] tempList = new String[(users.size())];
        users.toArray(tempList);
        for (String token:tempList) {
            //users.append(token + "/n");
        }
    }
    
    public void sendDisconnect() {
        String bye = (username + ": :Disconnect");
        try {
            writer.println(bye);
            writer.flush();
        } catch (Exception e) {
            msg_area.append("Could not send Disconnect message. \n");
        }
    }
    
    public void Disconnect() { //untuk menampilkan disconnect atau yang gagal yang nantinya akan tampil di msg area
        try {
            msg_area.append("Disconnect. \n");
            sock.close();
        } catch(Exception ex) {
            msg_area.append("Failed to disconnect. \n");
        }
        isConnected = false;
        cb_username.setEditable(true);
    }
    
    public Client() {
        initComponents();
    }
    
    public class IncomingReader implements Runnable{
        //code untuk melihat apakah ada nilai yang dapat/ bisa dilihat maka akan ditampilkan suatu bentuk yang akan dipanggil
        public void run()
        {
            String[] data;
            String stream, done = "Done", connect = "Connect", disconnect = "Disconnect", chat = "Chat";
            
            try{
                while((stream = reader.readLine()) != null )
                {
                    data = stream.split(":");
                    if (data[2].equals(chat)){
                        msg_area.append(data[0] + ": " + data[1] + "\n");
                        msg_area.setCaretPosition(msg_area.getDocument().getLength());
                    }
                    else if (data[2].equals(connect)) 
                    {
                        msg_area.removeAll();
                        userAdd(data[0]);
                    }
                    else if (data[2].equals(disconnect))
                    {
                        userRemove(data[0]);
                    }
                    else if (data[2].equals(done))
                    {
                        writeUsers();
                        users.clear();
                    }
                }
            }catch(Exception ex) {
                //untuk menampilkan suatu kesalahan
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        msg_area = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cb_Address = new javax.swing.JTextField();
        cb_username = new javax.swing.JTextField();
        cb_password = new javax.swing.JTextField();
        cb_port = new javax.swing.JTextField();
        cb_login = new javax.swing.JButton();
        cb_connect = new javax.swing.JButton();
        cb_disconnect = new javax.swing.JButton();
        cb_set = new javax.swing.JTextField();
        cb_send = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        msg_area.setColumns(20);
        msg_area.setRows(5);
        jScrollPane1.setViewportView(msg_area);

        jLabel1.setText("IP Address");

        jLabel2.setText("Nama");

        jLabel3.setText("Kata Sandi");

        jLabel4.setText("Port");

        cb_port.setText("2222");

        cb_login.setText("Login");
        cb_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_loginActionPerformed(evt);
            }
        });

        cb_connect.setText("Connect");
        cb_connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_connectActionPerformed(evt);
            }
        });

        cb_disconnect.setText("Disconnect");
        cb_disconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_disconnectActionPerformed(evt);
            }
        });

        cb_set.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_setActionPerformed(evt);
            }
        });

        cb_send.setText("Kirim");
        cb_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_sendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(cb_connect, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(cb_disconnect))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cb_send, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cb_password, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cb_username, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addGap(18, 18, 18)
                                            .addComponent(cb_Address, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(cb_port, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(cb_login, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(0, 0, Short.MAX_VALUE)))))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(cb_set, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(cb_Address, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(cb_username, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(cb_password, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cb_port, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addComponent(cb_login, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_connect)
                            .addComponent(cb_disconnect)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_set, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_send, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cb_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_loginActionPerformed
        cb_username.setText("");
        if (isConnected == false) { //jika sudah login maka akan masuk ke akun dibawah yang sudah ditentukan
            String Galih = "Galih";
            Random generator = new Random();
            int i = generator.nextInt(999) + 1;
            String is = String.valueOf(i);
            Galih = Galih.concat(is);
            username = Galih;
            
            cb_username.setText(Galih);
            cb_username.setEditable(false);
            
            try { //mendeklarasikan apa yang akan tampil di text field
                sock = new Socket (address, port);
                InputStreamReader streamreader = new InputStreamReader(sock.getInputStream());
                reader = new BufferedReader(streamreader);
                writer = new PrintWriter(sock.getOutputStream());
                writer.println(Galih + ":has connected.:Connect");
                writer.flush();
                isConnected = true;
            } catch (Exception ex) { //untuk mendefinisikan suatu kesalahan
                msg_area.append("Cannot Connect! Try Again \n");
                cb_username.setEditable(true);
            }
            ListenThread();
        } else if (isConnected == true) { //jika benar maka akan mengeksekusi dibawah ini
            msg_area.append("You are already connected. \n");
        }
    }//GEN-LAST:event_cb_loginActionPerformed

    private void cb_connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_connectActionPerformed
        if (isConnected == false) {
            username = cb_username.getText(); //dimana nantinya akan munculu pada text area apabila ada perubahan pada username
            cb_username.setEditable(false);
            
            try {
                sock = new Socket(address, port);
                InputStreamReader streamreader = new InputStreamReader(sock.getInputStream());
                reader = new BufferedReader(streamreader);
                writer = new PrintWriter(sock.getOutputStream());
                writer.println(username + ":has connected. :Connect");
                writer.flush();
                isConnected = true;
            } catch (Exception ex) { //untuk menampilkan suatu kesalahan apabila dari serever maupun client
                msg_area.append("Cannot Connect: Try Again. \n");
                cb_username.setEditable(true);
            }
            
            ListenThread();
        
        } else if(isConnected == true) { //jika berhasil makan akan menampilkan seperti dibawah ini
            msg_area.append("You are already connect. \n");
        }
    }//GEN-LAST:event_cb_connectActionPerformed

    private void cb_disconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_disconnectActionPerformed
        sendDisconnect(); // untuk mengirimkan pesan disconnect
        Disconnect(); // untuk mengirimkan disconnect
    }//GEN-LAST:event_cb_disconnectActionPerformed

    private void cb_setActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_setActionPerformed
        //untuk menampilkan dan mempublishkan sebuiah pesan
        
    }//GEN-LAST:event_cb_setActionPerformed

    private void cb_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_sendActionPerformed
        String nothing = "";
        if((cb_set.getText()).equals(nothing)) { //apabila benar pesan akan dilanjutkan
            cb_set.setText("");
            cb_set.requestFocus();
        } else { //apabila salah tidak dilanjutkan
            try {
                writer.println(username + ":" + cb_set.getText() + ":" + "Chat" );
                writer.flush();
            } catch (Exception ex) {
                msg_area.append("Message was not sent. \n");
            }
            cb_set.setText("");
            cb_set.requestFocus();   
        }
        cb_set.setText("");
        cb_set.requestFocus();
    }//GEN-LAST:event_cb_sendActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cb_Address;
    private javax.swing.JButton cb_connect;
    private javax.swing.JButton cb_disconnect;
    private javax.swing.JButton cb_login;
    private javax.swing.JTextField cb_password;
    private javax.swing.JTextField cb_port;
    private javax.swing.JButton cb_send;
    private javax.swing.JTextField cb_set;
    private javax.swing.JTextField cb_username;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea msg_area;
    // End of variables declaration//GEN-END:variables
}
